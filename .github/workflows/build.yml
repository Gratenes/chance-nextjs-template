on:
  push:
    branches: [ "master", "main" ]
  workflow_dispatch:

permissions:
  packages: write

jobs:
  build:
    name: Build NextJS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
      - name: Setup .next cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm install
      - name: Build with Next.js
        run: npx --no-install next build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: built-files
          path: .next/

  push:
    name: "Push to GitHub container registry"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Extract branch name
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Lowercase repository
        run: |
          echo "REPO_LOWERCASE=$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Fetch Artifacts
        uses: actions/download-artifact@v2
        with:
          name: built-files
          path: .next/
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LOWERCASE }}:${{ env.BRANCH_NAME }}
            ghcr.io/${{ env.REPO_LOWERCASE }}:latest